{"version":3,"sources":["components/Input.js","components/List.js","pages/TodoList.js","index.js"],"names":["Input","htmlFor","id","ref","inp","input","value","this","props","inpValue","type","onChange","handleChange","onClick","addTodo","Component","List","arr1","todos","filter","item","done","arr2","length","renderTodos","TodoList","e","setState","target","console","log","state","title","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","className","ReactDOM","render","document","getElementById"],"mappings":"6KAEqBA,E,uKACP,IAAD,OACL,OAAO,6BACH,2BAAOC,QAAQ,OAAf,YACA,2BACIC,GAAG,MACHC,IAAK,SAAAC,GAAG,OAAI,EAAKC,MAAQD,GACzBE,MAAOC,KAAKC,MAAMC,SAClBC,KAAK,OACLC,SAAUJ,KAAKC,MAAMI,eAEzB,4BAAQC,QAASN,KAAKC,MAAMM,SAA5B,qB,GAXuBC,aCAdC,E,uKAEjB,IAAIC,EAAOV,KAAKC,MAAMU,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAC5CC,EAAOf,KAAKC,MAAMU,MAAMC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,QACjD,OAAO,6BACL,uDAASC,EAAKC,QACd,4BACGhB,KAAKC,MAAMgB,aAAY,IAE1B,uDAASP,EAAKM,QACd,4BACGhB,KAAKC,MAAMgB,aAAY,S,GAXET,aCEbU,E,kDACjB,aAAc,IAAD,8BACT,gBAMJb,aAAe,SAACc,GACZ,EAAKC,SAAS,CAAClB,SAASiB,EAAEE,OAAOtB,SARxB,EAwBbQ,QAAU,WACVe,QAAQC,IAAI,gBACgB,IAArB,EAAKC,MAAMtB,WAGd,EAAKkB,SAAS,CACVT,MAAM,CACF,CACIc,MAAO,EAAKD,MAAMtB,SAClBY,MAAM,IAHT,mBAKE,EAAKU,MAAMb,UAGtB,EAAKS,SAAS,CAAClB,SAAS,OAtCf,EAwCbwB,QAAU,SAACC,GACP,EAAKP,SAAS,CACVT,MAAO,EAAKa,MAAMb,MAAMC,QAAO,SAACC,EAAKe,GAAN,OAAcA,GAAOD,QA1C/C,EA6CbE,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAMb,QACpDmB,EAASF,GAAOd,MAAQgB,EAASF,GAAOd,KACxC,EAAKM,SAAS,CACVT,MAAOmB,KAjDF,EAoDbb,YAAc,SAACH,GACX,OAAO,EAAKU,MAAMb,MAAMuB,KAAI,SAACC,EAAKR,GAC9B,GAAGb,GAAMqB,EAAKrB,KACV,OAAO,4BACH,2BAAOR,QAAS,kBAAI,EAAKuB,OAAOF,IAAMS,QAAStB,EAAMX,KAAK,aAC1D,0BAAMkC,wBAAyB,CAACC,OAAOH,EAAKV,SAC5C,4BAAQnB,QAAS,kBAAI,EAAKoB,QAAQC,KAAlC,qBAxDZ,EAAKH,MAAQ,CACTtB,SAAU,GACVS,MAAM,IAJD,E,gEAWT,IAAIA,EAAQ4B,aAAaC,QAAQ,SAC9B7B,GACCX,KAAKoB,SAAS,CACVT,MAAOoB,KAAKC,MAAMrB,O,2CAK1B4B,aAAaE,QACT,QACAV,KAAKE,UAAUjC,KAAKwB,MAAMb,U,+BA0CxB,IAAD,EACsBX,KAAKwB,MAAxBb,EADH,EACGA,MAAOT,EADV,EACUA,SACf,OACI,yBAAKwC,UAAU,OACX,kBAAC,EAAD,CAAOxC,SAAUA,EAAUG,aAAcL,KAAKK,aAAcE,QAASP,KAAKO,UAC1E,kBAAC,EAAD,CAAMI,MAAOA,EAAOM,YAAajB,KAAKiB,mB,GArEhBT,aCOtCmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c959c63b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    render() {\r\n        return <div>\r\n            <label htmlFor=\"inp\">todolist</label>\r\n            <input\r\n                id=\"inp\"\r\n                ref={inp => this.input = inp}\r\n                value={this.props.inpValue}\r\n                type=\"text\"\r\n                onChange={this.props.handleChange}\r\n            />\r\n            <button onClick={this.props.addTodo}>添加</button>\r\n        </div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class List extends Component {\r\n  render() {\r\n    let arr1 = this.props.todos.filter(item => item.done)\r\n    let arr2 = this.props.todos.filter(item => !item.done)\r\n    return <div>\r\n      <h2>正在进行{arr2.length}</h2>\r\n      <ul>\r\n        {this.props.renderTodos(false)}\r\n      </ul>\r\n      <h2>已经完成{arr1.length}</h2>\r\n      <ul>\r\n        {this.props.renderTodos(true)}\r\n      </ul>\r\n    </div>\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport Input from '../components/Input.js';\r\nimport List from '../components/List.js';\r\n\r\nexport default class TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{//现在的问题是每输入就会存储，而不是等我点击\r\n    console.log('!!!!!!!!!!!!');\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input onClick={()=>this.toggle(idx)} checked={done} type=\"checkbox\"/>\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button onClick={()=>this.delTodo(idx)}>删除</button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { todos, inpValue} = this.state;\r\n        return (\r\n            <div className=\"box\">\r\n                <Input inpValue={inpValue} handleChange={this.handleChange} addTodo={this.addTodo}/>\r\n                <List todos={todos} renderTodos={this.renderTodos}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Control from './components/Control.js';\n// import Demo01 from './pages/Demo01.js';\n// import Home from './pages/Home.js';\n// import App from './pages/App'\n// import Hoc,{Detail} from './pages/Hoc';\n// import Hook from './pages/Hook.js';\n// import $, { readyException } from 'jquery';\nimport TodoList from './pages/TodoList';\n\nReactDOM.render(\n  <TodoList/>,\n  document.getElementById('root')\n);\n\n//const List = (props)=>{\n//   return <ul>{\n//    props.data.map(\n//       (item) => <li>{item.title}</li>\n//       )\n//   }\n//   </ul>\n// }\n\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state={\n//       data:[]\n//     }\n\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(({data})=>{\n//       this.setState({data})\n//     })\n//         // this.handleClick=this.handleClick.bind(this);\n//   }\n\n//   handleClick=(item)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page=' + item)\n//     .then(res=>res.json())\n//     .then(({data})=>{\n//       this.setState({data})\n//     })\n//   }\n\n//   render(){\n//   const btns =[1,2,3,4,5];\n//     const {data}=this.state;\n//     return  <div>\n//       {\n//         btns.map((item)=><button key={item} onClick={()=>this.handleClick(item)}>{item}</button>)\n//       }\n//       <List data={data}/>\n//     </div>\n    \n//   }\n// }\n\n// function App(props){\n// //函数组件 UI组件（展示），木偶组件\n//   const {title,id}=props;\n//   return <div>\n//   <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// //智能组件\n// class Demo extends React.Component{\n//   constructor(){  \n//     super();\n//     //声明状态\n//     this.state={\n//       name:new Date().toLocaleString()\n//     }\n//     setInterval(() => {\n//       this.setState({name:new Date().toLocaleString()})\n//     }, 1000);\n//   }\n//   render(){\n//     return <div>\n//       <App title={this.state.name} id='app'/>\n//       <div>name:{this.state.name}</div>\n//     </div>\n//   }\n// }\n\n// setInterval(() => {\n//   let ele = <h1 id='title' className='tit'>\n//   <div>当前时间</div>\n//   {new Date().toLocaleString()}\n//   </h1>;\n\n//   ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n// }, 1000);\n\n  // 1、原生JS，DOM操作（jQ）\n  // 2、React：开发效率高、性能高\n  // 3、环境搭建、创建一个项目、运行\n  // 4、JSX语法\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop i props) {\n//       if(prop == 'children'){\n//         if(typeof props.children =='string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n"],"sourceRoot":""}